@if(Pessoa is not null)
{
    <EditForm Enhance="true" method="post" FormName="PessoaForm" OnValidSubmit="EditaAdicionaPessoa"
         Model="Pessoa" id="EditaAdicionaPessoa">

        <h3>@Cabecalho</h3>

        @if (ModoEdicao)
        {
            <input type="hidden" name="Pessoa.IdPessoa" value="@Pessoa.IdPessoa" />
            <input type="hidden" name="Pessoa.Role" value="@Pessoa.Role" />
            <input type="hidden" name="Pessoa.Senha" value="string" />
            <input type="hidden" name="Pessoa.ConfirmaSenha" value="string" />
        }

        <div class="mb-3">
            <label for="nome" class="form-label">Nome</label>
            <InputText id="nome" @bind-Value="Pessoa.Nome" class="form-control" />
            <ValidationMessage For="@(() => Pessoa.Nome)" />
        </div>
        <div class="mb-3">
            <label for="sobrenome" class="form-label">Sobrenome</label>
            <InputText id="sobrenome" @bind-Value="Pessoa.SobreNome" class="form-control" />
            <ValidationMessage For="@(() => Pessoa.SobreNome)" />
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <InputText id="email" @bind-Value="Pessoa.Email" class="form-control" />
            <ValidationMessage For="@(() => Pessoa.Email)" />
        </div>
        @if (!ModoEdicao)
        {
            <div class="mb-3">
                <label for="senha" class="form-label">Senha</label>
                <InputText type="password" id="senha" @bind-Value="Pessoa.Senha" class="form-control" />
                <ValidationMessage For="@(() => Pessoa.Senha)" />
            </div>
            <div class="mb-3">
                <label for="confirmasenha" class="form-label">Confirmar Senha</label>
                <InputText type="password" id="confirmasenha" @bind-Value="Pessoa.ConfirmaSenha" class="form-control" />
                <ValidationMessage For="@(() => Pessoa.ConfirmaSenha)" />
            </div>
        }
        <div class="mb-3">
            <label for="telefone" class="form-label">Telefone</label>
            <InputText id="telefone" @bind-Value="Pessoa.Telefone" class="form-control" />
            <ValidationMessage For="@(() => Pessoa.Telefone)" />
        </div>
        <div class="mb-3">
            <button class="btn btn-success">
                Enviar
            </button>
            <a href="/pessoas" class="btn btn-secondary ms-3" data-enhance-nav="false">
                Retornar para pessoas
            </a>
        </div>

        <DataAnnotationsValidator />
   </EditForm>
}


@code {
    [Parameter]
    public bool ModoEdicao { get; set; } = false;

    [Parameter]
    public string IdPessoa { get; set; }

    [Parameter]
    //informar o componente Pai que o Form foi enviado
    public EventCallback<Pessoa> OnValidaPessoaSubmit { get; set; }

    [SupplyParameterFromForm(FormName = "PessoaForm")]
    public Pessoa? Pessoa { get; set; }

    private string Cabecalho => ModoEdicao ? $"Editar seus dados" : "Realizar cadastro";
    
    protected override async Task OnInitializedAsync()
    {
        if (ModoEdicao)
            Pessoa ??= await pessoaRepository.ObterPessoa(IdPessoa);
        else
           Pessoa ??= new Pessoa(string.Empty, string.Empty, string.Empty, string.Empty, string.Empty, string.Empty, string.Empty);
    }

    private async Task EditaAdicionaPessoa()
    {
        await OnValidaPessoaSubmit.InvokeAsync(Pessoa);
    }
}